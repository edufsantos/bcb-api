// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Plan {
  PRE
  POS
}

model User {
  id            String   @id @default(uuid()) @db.Uuid
  name          String
  email         String   @unique
  emailVerified Boolean? @default(false)
  phoneNumber   String
  cpf           String   @unique
  password      String?
  created_at    DateTime @default(now())
  updated_at    DateTime @updatedAt

  @@unique([email, id, cpf], name: "registration_identifier")
}

model Customer {
  id              String       @id @default(uuid()) @db.Uuid
  name            String
  email           String       @unique
  emailVerified   Boolean?     @default(false)
  phoneNumber     String
  cpf             String       @unique
  cnpj            String
  companyName     String
  password        String?
  active          Boolean?     @default(false)
  planPayment     Plan         @default(POS)
  balanceCredits  Int?         @default(0) // Creditos para pr√© pago
  consumptionPlan Int?         @default(0) // Consumo do Pos 
  messagesSent    Message[]
  posPaidPlanId   String?      @db.Uuid
  posPaidPlan     PosPaidPlan? @relation(fields: [posPaidPlanId], references: [id])
  created_at      DateTime     @default(now())
  updated_at      DateTime     @updatedAt

  @@unique([id, email, cpf], name: "customer_identifier")
}

model PosPaidPlan {
  id             String     @id @default(uuid()) @db.Uuid
  customer       Customer[]
  title          String?
  description    String?
  price          Float?
  balanceCredits Int?
  active         Boolean?   @default(false)
  isMostPopular  Boolean?   @default(false)
  created_at     DateTime   @default(now())
  updated_at     DateTime   @updatedAt
}

model Message {
  id          String   @id @default(uuid()) @db.Uuid
  phoneNumber String
  isWhatsApp  Boolean
  text        String
  customerId  String   @db.Uuid
  customer    Customer @relation(fields: [customerId], references: [id])
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt
}
